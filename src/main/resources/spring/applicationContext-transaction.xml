<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

			<!-- 事务管理器 
				对mybatis操作数据库事务控制，spring使用jdbc的事务控制类
			-->
			<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
				<!-- 数据源
				dataSource在applicationContext-dao.xml中配置了
				 -->
				<property name="dataSource" ref="dataSource"/>
			</bean>
 			
				<bean id="myRealm" class="com.bluedot.realm.MyRealm"/>  
				
				<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
			  	  <property name="realm" ref="myRealm"/>  
				</bean>  
				
				<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
				    <property name="securityManager" ref="securityManager"/>
				    <property name="loginUrl" value="/userlogin.html"/>
				   <!--  <property name="unauthorizedUrl" value="/unauthor.jsp"/>   -->
				    <property name="filterChainDefinitions">  
				        <value>  
				           
				         <!--     /user/**=authc,roles[user],roles[admin] -->
				           /user/login.do=anon
				            /user/**=authc
							/admin*/**=authc,roles[admin]
							<!-- /student=roles[] -->
				        </value>  
				    </property>
				</bean>  
				
				<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
				
				<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
			  		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
			  	  <property name="securityManager" ref="securityManager"/>  
			    </bean>  
			
			<!-- 通知             进行事物的处理-->
			<tx:advice id="txAdvice" transaction-manager="transactionManager">
				<tx:attributes>
					<!-- 传播行为 -->
					<tx:method name="*" propagation="REQUIRED"/>
					<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
					<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
					<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
				</tx:attributes>
			</tx:advice>
			<!-- aop  进行切面配置-->
			<aop:config>
				<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.bluedot.service.impl.*.*(..))"/>
			</aop:config>

</beans>